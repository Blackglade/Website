{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/working-with-edgi/","result":{"data":{"currPost":{"id":"e60c0b5d-b4db-5f60-a5e9-13214a4bf6e0","frontmatter":{"title":"Working with EDGI","date":"29 Aug 2017","asset_folder":3},"fields":{"year":"2017"},"html":"<h3>Introduction</h3>\n<p>Over the past 3 months, as part of <a href=\"https://summerofcode.withgoogle.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Summer of Code 2017 (GSoC)</a>, I spent my time working with the <a href=\"https://envirodatagov.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Environmental Data &#x26; Governance Initiative (EDGI)</a>. EDGI is a network of scientists, professors, and other non-profits that came together in response to the Trump administration and the threat they posed to several environmental agencies and public resources. EDGI essentially took that threat as a call-to-action and since then has been working diligently as a team on developing tools and resources to help preserve environmental data.</p>\n<p>Over the summer, I became a part of that team.</p>\n<h3>Data Models</h3>\n<p>My project focused on data visualization. I was tasked with creating interactive graphs and models that would help users better visualize the data they were scraping/archiving off the internet. Using <a href=\"https://d3js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">D3</a>, I helped create a <strong>Coverage Map</strong> and a <strong>DataRescue Map</strong>.</p>\n<h4>Coverage Map</h4>\n<p>EDGI has been archiving data from public resources since December of last year. Previously, they had been using a tree to show coverage with each node delinating url pathing and then file structure. While this was fine at the time, as the data count went from tens to hundreds of thousands, it became <em>messy</em>. There was a disconnect between the information conveyed in the tree and what a user wanted to see.</p>\n<p><img src=\"assets/4/archivers.jpg\" alt=\"Archivers\"></p>\n<p>My first couple of weeks were spent prototyping different models and obtaining feedback. I went through several variations of <a href=\"https://bl.ocks.org/mbostock/5944371\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bilevel Partitions</a>, <a href=\"https://bl.ocks.org/mbostock/1005873\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Icicle Trees</a>, and <a href=\"https://bl.ocks.org/mbostock/4063550\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">whatever this thing is</a> before finally settling on a <a href=\"https://www.datavizcatalogue.com/methods/sunburst_diagram.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sunburst Diagram</a>.</p>\n<p><img src=\"assets/4/sunburst.png\" alt=\"Sunburst Diagram\"></p>\n<p>Sunburst Diagrams use concentric rings with divided arcs to show groups/categories with each layer denoting hierarchy. Digging further, I found a variation on the diagram called a <a href=\"https://bl.ocks.org/kerryrodden/766f8f6d31f645c39f488a0befa1e3c8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sequence Sunburst by Kerry Rodden</a> in D3 which became a solid base to make the coverage map.</p>\n<p>After getting it to correctly convert/process a sample JSON dump of the coverage data, I started polishing the model and creating a standalone ReactJS component. There were several issues that came up during this time that slowed down progress including:</p>\n<ul>\n<li><strong>Color Schemes -</strong> Initially, we used a qualitative color scheme and displayed archival rate when the user hovered over an arc. We found this to be suboptimal and instead opted into a sequential color scheme for the entire diagram.</li>\n<li><strong>Completion Rate -</strong> Each node gave us two values: <strong>numLeaves</strong> and <strong>numLeavesArchived</strong>. Archival rate was calculated using <strong>numLeavesArchived/numLeaves</strong>. Based on user feedback, the issue was whether <strong>numLeaves</strong> should be the node’s parent value or it’s own.</li>\n<li><strong>Categorizing Data -</strong> Initially, the data was separated by protocol (https, http, ftp). While this was informative, it wasn’t particularly useful. We tried to separating it by website, but that too ended up filtering out ~97% of generated sunburst sequences because they were too small to display. We eventually moved on to filetype.</li>\n<li><strong>React Integration -</strong> This was probably the most annoying one. Both D3 and ReactJS are designed in such a way that they want to directly manipulate the DOM. Ofcourse, combining them means only one can.</li>\n<li><strong>ArcTween-ing -</strong> Animating the diagram was challenging. Being new to D3, I had to figure out how to properly interpolate different arc lengths and animate the transitions between them.</li>\n</ul>\n<h4>DataRescue Map</h4>\n<p>While web monitoring and archiving are a large part of EDGI’s focus, the organization also hosts several <a href=\"https://envirodatagov.org/datarescue/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DataRescue events</a> around the country with the goal of identifying and preserving different datasets. I always imagined it as a hackathon for archiving data.</p>\n<p>Anyway, noticing that there was no effective way to view past events, I created a projection map of the United States highlighting interactive points across the country where the events took place. It was also directly integrated with the EDGI Airtable so the map updates live as new events come up. Working on the model came with it’s fair share of obstacles as well including:</p>\n<ul>\n<li><strong>Optimization -</strong> This was a big one. A lot of the coordinate calculations, polygon rendering, and JSON processing for the map is dumped on the client. Decreasing the load time for the model became an issue and a lot of the testing involved alternating between using <a href=\"https://github.com/topojson/topojson\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TopoJSON</a> and <a href=\"https://geojson.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GeoJSON</a> data.</li>\n<li><strong>Similar Datapoints -</strong> Events held in locations &#x3C; 30 miles apart became an issue because the points were impossible to distinguish from each other on the map. A proposed solution was to aggregate nearby coordinates and increase the radius of the generated circle.</li>\n<li><strong>Screen Size -</strong> This became an issue for many people viewing across different screens/devices. Due to limitations in the Albers’ equal area-conic projection, the map couldn’t be stretched. This made it harder for mobile users in particular to see the details of individual events. Users also had a hard time noticing that the text below the projection was changing</li>\n</ul>"},"prevPost":{"id":"3c18d4b3-4e29-5956-928d-a1f15716ff20","frontmatter":{"title":"The Plus Project: Part 1","asset_folder":2},"fields":{"year":"2017"},"html":"<h3>Introduction</h3>\n<p>I’ve had this broken 1986 Macintosh Plus for a while now collecting dust underneath my bed. I wanted to fix it up and get it working, but something always got in the way. It was actually given to me a couple years back at a Maker Faire in 2013. I had stumbled into this vintage electronics booth and the plus sitting there. Fixing it up sounded like a good idea at the time so I took it off the owner's hands. This was 5 years ago...</p>\n<p>Anyway, I've had a lot more time lately and decided to take it out of storage to work on. This will probably be a multi-part series. I can’t fit all my research into one post.</p>\n<h3>Inside the Computer</h3>\n<p>Apple first introduced the Macintosh Plus in January of 1986. Following their original Macintosh line, the Plus retailed at $2599 and was largely seen as an upgrade, shipping with 1MB of RAM, a <a href=\"https://en.wikipedia.org/wiki/SCSI\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SCSI (“scuzzy”) bus</a>, and other smaller improvements.</p>\n<p>Using an online decoder with my Macintosh Plus’s serial number <strong>F629063M0001A</strong>, I found out that this computer was the 207th unit manufactured on the 29th week of 1986 <em>(~August)</em> in Fremont, CA. That is almost 7 months after it first debuted!</p>\n<p><img src=\"assets/3/plus_outside2.jpg\" alt=\"Plus Outside\"></p>\n<p>Opening the case was a <strong>fucking</strong> hassle. For some reason, Apple <em>opted in</em> to use special Torx T15 screws instead of standard flatheads. Even then, most standard T15 screwdrivers didn't work because they had to be able access the deeply recessed screws in the case. It took a while to find the right screwdriver.</p>\n<p>With the case open and the <a href=\"https://en.wikipedia.org/wiki/Cathode-ray_tube#Electric_shock\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CRT monitor discharged</a>, the first thing I did was take a picture of Steve Jobs’ signature. According to this <a href=\"https://www.folklore.org/StoryView.py?project=Macintosh&#x26;story=Signing_Party.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">blog post</a>, in the early days of Apple, Steve Jobs encouraged the design team to consider themselves as artists building the Macintosh. As with any artist, it was only appropriate for them to sign their work which eventually got engraved into the final plastic molding of the case.</p>\n<p><img src=\"assets/3/plus_case2.jpg\" alt=\"Steve Jobs Signature\"></p>\n<p>Looking inside, the computer seemed mostly intact. Despite some rust/corrosion near the PRAM battery slot and dust, the Plus was in fairly good shape.</p>\n<p><img src=\"assets/3/plus_inside1.jpg\" alt=\"Macintosh Plus Open\"></p>\n<p>From here, I decided to disassemble the entire unit so I could get rid the dust that had collected over the years. I read somewhere online that soaking the entire board in soapy water and then giving it time to properly dry worked well, and in some cases, even helped fix computer glitches. I ended up soaking the power supply, internal metal casing, and logic board (making sure to take out any removable IC's/wires). The floppy drive was cleaned using a can of compressed air and I ended up wiping down the CRT monitor and case with a wet towel.</p>\n<p><img src=\"assets/3/plus_together.jpg\" alt=\"Macintosh Plus Components\"></p>\n<h3>The Components</h3>\n<p>Feel free to skip over this section. This part is mostly for me to fanboy over some of the older chipsets. Some of the components are labeled in the picture.</p>\n<div style=\"text-align: center\">\n<h4>The Logic Board</h4>\n<p><img src=\"assets/3/plus_logic.jpg\" alt=\"Logic Board\">\n<br /></p>\n<h4>The Power Supply</h4>\n<p><img src=\"assets/3/plus_psu.jpg\" alt=\"The Power Supply\">\n<br /></p>\n<h4>CRT Monitor</h4>\n<p><img src=\"assets/3/plus_crt.jpg\" alt=\"CRT Monitor\">\n<br /></p>\n<h4>The Floppy Drive</h4>\n<p><img src=\"assets/3/plus_floppy.jpg\" alt=\"The Floppy Drive\"></p>\n</div>\n<h3>Decisions, Decisions</h3>\n<p>Moving forward, I essentially had 2 options. Restoring the Plus to its original condition <strong>OR</strong> upgrading it with new parts.</p>\n<p>Restoring it seemed like an obvious choice at first until I started calculating the cost of repair. Assuming all existing components worked properly, I was still looking at $200 in repair costs. This included buying a compatible keyboard and mouse, finding a working SCSI HD since the Plus had no permanent storage, and getting a copy of the original OS on a <a href=\"https://en.wikipedia.org/wiki/Floppy_disk_format#Single_Sided.2C_Double_Density\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">double density floppy disk</a>. The Plus’s floppy drive reads only double density disks which are grossly outdated and obsolete. If an issue did come up, however, with the logic/power board, that price could would jump to $300+. In the end it just didn't make sense to spend all that money working on something that could only run a very dated version of Mac OS.</p>\n<p>So I arrived at my second choice; upgrading it with new parts. Looking around, I found <a href=\"https://www.instructables.com/id/Making-ApplePi-Merging-a-Vintage-Macintosh-Plus-Wi/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">several</a> <a href=\"https://medium.com/@trm42/raspberry-pi-2-macintosh-plus-raspintosh-cd2f6691fecf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">projects</a> <a href=\"https://www.youtube.com/watch?v=1q-zmSzjZ8w\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">online</a> that had replaced the internals of the Plus with a Raspberry PI or other Single-Board Computer, but kept the original casing. This is the route I ended up taking.</p>"}},"pageContext":{"currPost":"/blog/2017/working-with-edgi/","prevPost":"/blog/2017/the-plus-project-part-1/"}}}